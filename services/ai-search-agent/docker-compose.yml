version: '3.8'

services:
  # SearXNG - Privacy-focused search engine
  searxng:
    image: searxng/searxng:latest
    container_name: local-ai-searxng
    ports:
      - "8080:8080"
    volumes:
      - ./searxng_settings.yml:/etc/searxng/settings.yml:ro
      - searxng_data:/etc/searxng
    environment:
      - SEARXNG_BASE_URL=http://localhost:8080/
      - SEARXNG_URL=http://localhost:8080/
    depends_on:
      - redis
    restart: unless-stopped
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  # Redis for SearXNG caching
  redis:
    image: redis:alpine
    container_name: local-ai-redis
    command: redis-server --save 30 1 --loglevel warning
    volumes:
      - redis_data:/data
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    restart: unless-stopped

  # AI Search Agent Service
  ai-search-agent:
    build: .
    container_name: local-ai-search-agent
    ports:
      - "8001:8001"
    environment:
      - SEARXNG_BASE_URL=http://searxng:8080
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    depends_on:
      - searxng
      - redis
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: local-ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - searxng
      - ai-search-agent
    restart: unless-stopped

volumes:
  searxng_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    driver: bridge
